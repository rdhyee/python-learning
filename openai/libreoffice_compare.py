#!/Applications/LibreOffice.app/Contents/Resources/python
# -*- coding: utf-8 -*-

"""
libreoffice_compare.py

compares two documents in LibreOffice Writer.
to be run by the python interpreter bundled with LibreOffice.

generated by Raymond Yee with the help of claude.ai (Aug, 2024)

"""

import uno
import sys
import os
from com.sun.star.beans import PropertyValue
from pathlib import Path


def convert_to_url(path):
    # Ensure path is a pathlib.Path object
    if not isinstance(path, Path):
        path = Path(path)
    
    # Convert to absolute path
    path = path.resolve()
    
    # Convert to URL
    # deal with spaces and other special characters in the path

    path_str = str(path)
    if path_str.startswith("file://"):
        return path_str
    return "file://" + path_str.replace("\\", "/").replace(" ", "%20")


def file_exists(path):
    return os.path.exists(path)


def compare_documents(original_doc_path, modified_doc_path):
    try:
        # Get the component context
        local_context = uno.getComponentContext()
        
        # Create the UnoUrlResolver
        resolver = local_context.ServiceManager.createInstanceWithContext(
            "com.sun.star.bridge.UnoUrlResolver", local_context)

        # Connect to the running office
        ctx = resolver.resolve("uno:socket,host=localhost,port=2002;urp;StarOffice.ComponentContext")
        smgr = ctx.ServiceManager

        # Get the Desktop object
        desktop = smgr.createInstanceWithContext("com.sun.star.frame.Desktop", ctx)

        # Convert paths to URLs
        original_url = convert_to_url(original_doc_path)
        modified_url = convert_to_url(modified_doc_path)

        # Open the original document
        # original_doc = desktop.loadComponentFromURL(original_url, "_blank", 0, ())

        # Open the modified document
        modified_doc = desktop.loadComponentFromURL(modified_url, "_blank", 0, ())


        # Create the dispatch helper
        dispatch_helper = smgr.createInstanceWithContext("com.sun.star.frame.DispatchHelper", ctx)

        # Set up the arguments for the compare command
        args = (
            PropertyValue("URL", 0, original_url, 0),
        )

        # Execute the compare command
        dispatch_helper.executeDispatch(modified_doc.getCurrentController().getFrame(), ".uno:CompareDocuments", "", 0, args)

        print("Document comparison completed successfully.")

        # Optionally, you can save and close the document here
        # original_doc.store()
        # original_doc.close(True)

        # save the file as ODT format
        modified_doc.storeAsURL(convert_to_url("/Users/raymondyee/Library/CloudStorage/GoogleDrive-raymond.yee@gmail.com/My Drive/tmp/output.odt"), ())


    except Exception as e:
        print(f"An error occurred: {str(e)}")

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python script.py <original_doc_path> <modified_doc_path>")
        sys.exit(1)

    original_doc_path = sys.argv[1]
    modified_doc_path = sys.argv[2]

    if not file_exists(original_doc_path):
        print(f"Error: The original document does not exist: {original_doc_path}")
        sys.exit(1)

    if not file_exists(modified_doc_path):
        print(f"Error: The modified document does not exist: {modified_doc_path}")
        sys.exit(1)

    compare_documents(original_doc_path, modified_doc_path)